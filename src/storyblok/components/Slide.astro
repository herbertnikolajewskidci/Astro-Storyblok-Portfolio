---
const { blok } = Astro.props;
const { id, number, heading, text, imgSrc, starter } = blok;
---

<input type="radio" name="slide" id={id} checked={starter} class="hidden" />
<label
    for={id}
    class="w-20 rounded-3xl bg-cover cursor-pointer overflow-hidden mx-0 my-2 flex items-end shadow-2xl transition-all duration-700"
    style={`background-image: url(${imgSrc.filename})`}
>
    <div class="row flex flex-nowrap">
        <div
            class="icon bg-background text-text rounded-full w-12 flex justify-center items-center m-4"
        >
            {number}
        </div>
        <div
            class="description flex justify-center flex-col overflow-hidden h-20 w-[520px transition-all ease-in-out duration-300 delay-150 opacity-0 translate-y-8"
        >
            <h4 class="text-white uppercase font-bold">{heading}</h4>
            <p class="text-white pt-1 font-semibold">
                {text}
            </p>
        </div>
    </div>
</label>

<script>
    // Alle Radio-Buttons auswählen
    const allRadioButtons = document.querySelectorAll("input");

    // Für jeden Radio-Button
    allRadioButtons.forEach((currRadioButton) => {
        // Das nächste Label des aktuellen Radio-Buttons auswählen
        const currentLabel = currRadioButton.nextElementSibling;

        // Die Beschreibung innerhalb des Labels auswählen
        const currentDescription = currentLabel.children[0].children[1];

        // Überprüfen, ob der aktuelle Radio-Button ausgewählt ist
        if (currRadioButton.checked) {
            // Wenn ausgewählt, entferne die Klasse "opacity-0" und "translate-y-8" von der Beschreibung
            currentDescription.classList.remove("opacity-0", "translate-y-8");

            // Ändere die Klassen des Labels, um die Breite zu erhöhen
            currentLabel.classList.remove("w-20");
            currentLabel.classList.add("w-[600px]");
        }

        // Ein Event-Listener hinzufügen, um auf Änderungen im Radio-Button zu reagieren
        currRadioButton.addEventListener("change", () => {
            // Entferne die Klasse "opacity-0" und "translate-y-8" von der Beschreibung
            currentDescription.classList.remove("opacity-0", "translate-y-8");

            // Ändere die Klassen des Labels, um die Breite zu erhöhen
            currentLabel.classList.remove("w-20");
            currentLabel.classList.add("w-[600px]");

            // Für alle anderen Radio-Buttons
            for (let otherRadioButton of allRadioButtons) {
                // Das nächste Label des anderen Radio-Buttons auswählen
                const otherLabel = otherRadioButton.nextElementSibling;

                // Wenn es nicht der aktuelle Radio-Button ist
                if (otherRadioButton !== currRadioButton) {
                    // Füge die Klassen "opacity-0" und "translate-y-8" zur Beschreibung hinzu
                    otherLabel.children[0].children[1].classList.add(
                        "opacity-0",
                        "translate-y-8"
                    );

                    // Ändere die Klassen des Labels, um die Breite zu verringern
                    otherLabel.classList.add("w-20");
                    otherLabel.classList.remove("w-[600px]");
                }
            }
        });
    });
</script>
